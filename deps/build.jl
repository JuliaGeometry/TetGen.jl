using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    ExecutableProduct(prefix, "tetgen", :tetgen),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaGeometry/TetgenBuilder/releases/download/v1.5.0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/tetgen.aarch64-linux-gnu.tar.gz", "14f4b1566bc4955372bbd3f3c29f4d28f05a2a5748b941b0bc43911e454ef1c5"),
    Linux(:aarch64, :musl) => ("$bin_prefix/tetgen.aarch64-linux-musl.tar.gz", "470f502a572d2f53c801c7fef64387c882d54e2eaa9cb7c00e5cc09732d35b48"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/tetgen.arm-linux-gnueabihf.tar.gz", "30abadeb3ad330aee8f6725d811d4e40a0ed378c063582513f62cc910176fc78"),
    Linux(:armv7l, :musl, :eabihf) => ("$bin_prefix/tetgen.arm-linux-musleabihf.tar.gz", "5e2cb60f07150a015ab5472c811785b643ca0eb63bef374c56abd2cf089e8866"),
    Linux(:i686, :glibc) => ("$bin_prefix/tetgen.i686-linux-gnu.tar.gz", "4a018a14288f076c622378bb061b6edfb2d267dc35efc62e9f64729547a17224"),
    Linux(:i686, :musl) => ("$bin_prefix/tetgen.i686-linux-musl.tar.gz", "a7624bf6b9903fb79e43e8a265414a369bc8abb511228e9fba695878e05bb6bf"),
    Windows(:i686) => ("$bin_prefix/tetgen.i686-w64-mingw32.tar.gz", "53c792b2ca43460299544eed77de71ff710537549e2b596de90d6fefed4c98c8"),
    Linux(:powerpc64le, :glibc) => ("$bin_prefix/tetgen.powerpc64le-linux-gnu.tar.gz", "3ce8685b4a453ebc875bcbba34aa2662ce20c883ba81a4bebdcfc9740375439c"),
    MacOS(:x86_64) => ("$bin_prefix/tetgen.x86_64-apple-darwin14.tar.gz", "0fb64a66d6b3be5fd88a6df1bb4d8d57166ea0ca064997295140f4b37f44454d"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/tetgen.x86_64-linux-gnu.tar.gz", "5591234c4e42d4f89da0e5c5302487ff6709c5ceaedeacef18abdc828fc5e617"),
    Linux(:x86_64, :musl) => ("$bin_prefix/tetgen.x86_64-linux-musl.tar.gz", "9b579713f404e82e847d5d6b27eedb665f26ffe1e95500caab5aff3459bb3db0"),
    FreeBSD(:x86_64) => ("$bin_prefix/tetgen.x86_64-unknown-freebsd11.1.tar.gz", "b345ef4634cbabb66005c9406ea322e3db684ff820eb1256644a343ef081651b"),
    Windows(:x86_64) => ("$bin_prefix/tetgen.x86_64-w64-mingw32.tar.gz", "22510dc273e947782e386288be6671c8bde1f0db36522924a04d0714b6c373ea"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products)
