using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libtet"], :libtet),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaGeometry/TetgenBuilder/releases/download/v2.0.2"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/TetGen.v1.5.0.aarch64-linux-gnu.tar.gz", "9c8288feabac676841b1a4bf8d08dd384b211c49cd59af401811e5d356a9a296"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/TetGen.v1.5.0.aarch64-linux-musl.tar.gz", "a0355529d7a8d657894ceee1baa3e46e9e0994cea6d627097e4a2fdc4ea9d859"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/TetGen.v1.5.0.arm-linux-gnueabihf.tar.gz", "a89d6f668b5cfec4a7cfb5d68877361df02b92a8bd68cc24fd65bda4705ff80c"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/TetGen.v1.5.0.arm-linux-musleabihf.tar.gz", "225641fe3c2b95e318c00203017984ddf6e775e14fd4d2a373789cd12cd2d4e3"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/TetGen.v1.5.0.i686-linux-gnu.tar.gz", "aa18265569fd875b63e50dae7966a640a6012dd590f0ec6ab724dd8d2abc072b"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/TetGen.v1.5.0.i686-linux-musl.tar.gz", "863035f65d3b3628c94415b2076c84399d27577f9b54684941f3774b6b760a99"),
    Windows(:i686) => ("$bin_prefix/TetGen.v1.5.0.i686-w64-mingw32.tar.gz", "8c31e44c0664ecbe3715baa208133f2571d04fbfd3327c17b3328de0850d2c96"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/TetGen.v1.5.0.powerpc64le-linux-gnu.tar.gz", "a161886dc1a28763449618576a609d40dfc67e63451d7847c2bcbf6e00c64ce6"),
    MacOS(:x86_64) => ("$bin_prefix/TetGen.v1.5.0.x86_64-apple-darwin14.tar.gz", "0230393ef41e5eab7ddb1aa4f9692268cce112da1ad5828f3fd302dc55ab042e"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/TetGen.v1.5.0.x86_64-linux-gnu.tar.gz", "bb56da8b5e92245d8bebb7aee6e6126d0a42de504b919e5a7967eedacb532335"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/TetGen.v1.5.0.x86_64-linux-musl.tar.gz", "6446a49e6a2b04456c48d0ca6ce64652923558222a0649cc05207478163fc03f"),
    FreeBSD(:x86_64) => ("$bin_prefix/TetGen.v1.5.0.x86_64-unknown-freebsd11.1.tar.gz", "729fc4c5f1531b866c0c69ca07d57aea3c83c307f3026af29c66fffa60310f3b"),
    Windows(:x86_64) => ("$bin_prefix/TetGen.v1.5.0.x86_64-w64-mingw32.tar.gz", "9cad5c60aa77326f4f442d7b9e10f67521e73daed80de43a99c57b797e11d8aa"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
